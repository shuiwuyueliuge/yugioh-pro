spring.application.name=sync-ougocg
crawing.corn=*/1 * * * * ?

#feign.client.config.default.connect-timeout=5000
#feign.client.config.default.readTimeout=5000
#hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=8000

#ribbon.MaxAutoRetries=0 #最大重试次数，当Eureka中可以找到服务，但是服务连不上时将会重试
#ribbon.MaxAutoRetriesNextServer=0 #切换实例的重试次数
#ribbon.OkToRetryOnAllOperations=false # 对所有的操作请求都进行重试，如果是get则可以，如果是post,put等操作没有实现幂等的情况下是很危险的
#
#spring.sleuth.sampler.probability=1.0
#spring.sleuth.web.client.enabled=true
#spring.zipkin.sender.type=web
#spring.zipkin.base-url=http.//127.0.0.1.9411
#
#management.endpoint.bus-refresh.enabled=true
#
#spring.cloud.bus.trace.enabled=true
#
#eureka.client.serviceUrl.defaultZone=http.//127.0.0.1.9000/eureka/
#
#spring.rabbitmq.host=127.0.0.1
#spring.rabbitmq.port=5672
#spring.rabbitmq.username=guest
#spring.rabbitmq.password=guest
#
#feign.hystrix.enabled=true
#
#feign.client.config.default.connectTimeout=5000
#feign.client.config.default.readTimeout=5000
#feign.client.config.default.loggerLevel=full
#
# # 相当于Request.Options
#feign.client.config.<feignName>.connectTimeout=5000
## 相当于Request.Options
#feign.client.config.<feignName>.readTimeout=5000
# # 配置Feign的日志级别，相当于代码配置方式中的Logger
#feign.client.config.<feignName>.loggerLevel=full
## Feign的错误解码器，相当于代码配置方式中的ErrorDecoder
#feign.client.config.<feignName>.errorDecoder= com.example.SimpleErrorDecoder
## 配置重试，并不建议使用（Spring Cloud Camden以及之后的版本，关闭了Feign的重试，而是使用Ribbon的重试）
#feign.client.config.<feignName>.retryer= com.example.SimpleRetryer
## 配置拦截器，相当于代码配置方式中的RequestInterceptor
#feign.client.config.<feignName>.requestInterceptors=

#logging.level.cn.mayu.yugioh.common.core.html=debug